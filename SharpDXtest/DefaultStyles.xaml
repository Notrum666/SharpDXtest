<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:this="clr-namespace:Editor"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="DockingSpot" TargetType="Control">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Black" Opacity="0.5" Width="50" Height="50">
                        <Rectangle Margin="4" Fill="Blue"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DockingSpot_Top" BasedOn="{StaticResource ResourceKey=DockingSpot}" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Black" Opacity="0.5" Width="50" Height="50">
                        <Grid Margin="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Rectangle Fill="Blue" Grid.RowSpan="1" Grid.Row="0"/>
                            <Rectangle Fill="Gray" Grid.RowSpan="1" Grid.Row="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DockingSpot_Bottom" BasedOn="{StaticResource ResourceKey=DockingSpot}" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Black" Opacity="0.5" Width="50" Height="50">
                        <Grid Margin="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Rectangle Fill="Gray" Grid.RowSpan="1" Grid.Row="0"/>
                            <Rectangle Fill="Blue" Grid.RowSpan="1" Grid.Row="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DockingSpot_Left" BasedOn="{StaticResource ResourceKey=DockingSpot}" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Black" Opacity="0.5" Width="50" Height="50">
                        <Grid Margin="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Blue" Grid.ColumnSpan="1" Grid.Column="0"/>
                            <Rectangle Fill="Gray" Grid.ColumnSpan="1" Grid.Column="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DockingSpot_Right" BasedOn="{StaticResource ResourceKey=DockingSpot}" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Black" Opacity="0.5" Width="50" Height="50">
                        <Grid Margin="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Gray" Grid.ColumnSpan="1" Grid.Column="0"/>
                            <Rectangle Fill="Blue" Grid.ColumnSpan="1" Grid.Column="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DrawingBrush x:Key="CrossBrush" ViewboxUnits="Absolute">
        <DrawingBrush.Drawing>
            <GeometryDrawing>
                <GeometryDrawing.Geometry>
                    <GeometryGroup>
                        <LineGeometry StartPoint="0.1,0.1" EndPoint="0.9,0.9"/>
                        <LineGeometry StartPoint="0.1,0.9" EndPoint="0.9,0.1"/>
                    </GeometryGroup>
                </GeometryDrawing.Geometry>
                <GeometryDrawing.Pen>
                    <Pen Thickness="0.1" Brush="{StaticResource ForegroundBrush}"/>
                </GeometryDrawing.Pen>
            </GeometryDrawing>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    
    <DrawingBrush x:Key="HoverCrossBrush" ViewboxUnits="Absolute">
        <DrawingBrush.Drawing>
            <GeometryDrawing>
                <GeometryDrawing.Geometry>
                    <GeometryGroup>
                        <LineGeometry StartPoint="0.15,0.15" EndPoint="0.85,0.85"/>
                        <LineGeometry StartPoint="0.15,0.85" EndPoint="0.85,0.15"/>
                    </GeometryGroup>
                </GeometryDrawing.Geometry>
                <GeometryDrawing.Pen>
                    <Pen Thickness="0.1" Brush="{StaticResource BackgroundBrush}"/>
                </GeometryDrawing.Pen>
            </GeometryDrawing>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="CrossButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="MainGrid">
                        <Rectangle StrokeThickness="0" x:Name="Cross"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MainGrid" Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
                            <Setter TargetName="Cross" Property="Fill" Value="{StaticResource CrossBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainGrid" Property="Background" Value="{StaticResource HoverButtonBackgroundBrush}"/>
                            <Setter TargetName="Cross" Property="Fill" Value="{StaticResource HoverCrossBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="ToolsTabControl" TargetType="TabControl">
        <Style.Resources>
            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid x:Name="HeaderGrid" Height="20" Background="{StaticResource ItemTabBrush}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <this:EventToCommandAction Command="{Binding HeaderBackground_MouseDownCommand, 
                                            RelativeSource={RelativeSource AncestorType=this:ToolsHost}}" Sender="{Binding}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseMove">
                                        <this:EventToCommandAction Command="{Binding HeaderBackground_MouseMoveCommand, 
                                            RelativeSource={RelativeSource AncestorType=this:ToolsHost}}" Sender="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" MinWidth="40"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="HeaderTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6,4,6,4" 
                                           Text="{Binding Tag}" FontSize="12" FontWeight="Regular" Foreground="{StaticResource InactiveForegroundBrush}"/>
                                <Button x:Name="CloseButton" Grid.Column="1" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                                        Visibility="Hidden" Margin="4" VerticalAlignment="Stretch" Style="{StaticResource CrossButton}" 
                                        Command="{Binding CloseButton_ClickCommand, RelativeSource={RelativeSource AncestorType=this:ToolsHost}}" 
                                        CommandParameter="{Binding}"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="HeaderGrid" Property="Background" Value="{StaticResource SelectedItemTabBrush}"/>
                                    <Setter TargetName="CloseButton" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="HeaderTextBlock" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                    <Setter TargetName="HeaderTextBlock" Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderGrid" Property="Background" Value="{StaticResource HoverItemTabBrush}"/>
                                    <Setter TargetName="CloseButton" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="HeaderTextBlock" Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
                                    <Setter TargetName="HeaderTextBlock" Property="FontWeight" Value="Regular"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <this:ComplexConverter x:Key="TabPanelVisibilityConverter">
                <this:ComplexConverter.ConvertersSequence>
                    <this:IntToBoolConverter TargetValue="1" Mode="GreaterThan"/>
                    <this:BoolToVisibilityConverter/>
                </this:ComplexConverter.ConvertersSequence>
            </this:ComplexConverter>
            <this:ComplexConverter x:Key="SingleTabHeaderVisibilityConverter">
                <this:ComplexConverter.ConvertersSequence>
                    <this:IntToBoolConverter TargetValue="1" Mode="LessThanOrEqual"/>
                    <this:BoolToVisibilityConverter/>
                </this:ComplexConverter.ConvertersSequence>
            </this:ComplexConverter>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Height="20" Visibility="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=this:ToolsHost}, Converter={StaticResource SingleTabHeaderVisibilityConverter}}"
                              Background="Transparent">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <this:EventToCommandAction Command="{Binding HeaderBackground_MouseDownCommand, 
                                        RelativeSource={RelativeSource AncestorType=this:ToolsHost}}" 
                                        Sender="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=TabControl}}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <this:EventToCommandAction Command="{Binding HeaderBackground_MouseMoveCommand, 
                                        RelativeSource={RelativeSource AncestorType=this:ToolsHost}}" 
                                        Sender="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=TabControl}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,4,6,4" 
                                       Text="{Binding SelectedItem.Tag, RelativeSource={RelativeSource AncestorType=TabControl}}" FontSize="12" FontWeight="Regular" Foreground="{StaticResource ForegroundBrush}"/>
                            <Button HorizontalAlignment="Right" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                                    Margin="4" VerticalAlignment="Stretch" Style="{StaticResource CrossButton}" 
                                    Command="{Binding CloseButton_ClickCommand, RelativeSource={RelativeSource AncestorType=this:ToolsHost}}" 
                                    CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=TabControl}}"/>
                        </Grid>
                        <ScrollViewer Focusable="False" x:Name="TabPanelScrollViewer" Grid.Row="0" Panel.ZIndex="1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden"
                                      Visibility="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=this:ToolsHost}, Converter={StaticResource TabPanelVisibilityConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseWheel">
                                    <this:EventToCommandAction Command="{Binding TabPanel_PreviewMouseWheelCommand, 
                                        RelativeSource={RelativeSource AncestorType=this:ToolsHost}}" Sender="{Binding ElementName=TabPanelScrollViewer}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TabPanel IsItemsHost="True"/>
                        </ScrollViewer>
                        <Border x:Name="Border" Grid.Row="1" BorderThickness="1" 
                                Background="{StaticResource ResourceKey=BackgroundBrush}"
                                BorderBrush="{StaticResource ResourceKey=BorderBrush}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding ContentBackground_MouseDownCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>